/* This file is automatically generated by Lux. Do not modify. */

import { Inject, Service } from '@/System/Services';
import { Socket }          from '@/System/Socket/Socket';
import * as Model          from '@/XIV/Models/Generated';

@Service()
export class Invoker
{
    @Inject private readonly socket: Socket;

    public aetheryte = {
        teleport: (id: number): Promise<any> => this.socket.invoke('Aetheryte.Teleport', [id]),
    } as const;
    public zone = {
        getZone: (mapId: number): Promise<Model.Zone> => this.socket.invoke('Zone.GetZone', [mapId]),
        setSelectedZone: (mapId: number): Promise<any> => this.socket.invoke('Zone.SetSelectedZone', [mapId]),
        setFlagMarker: (mapId: number, territoryId: number, x: number, y: number): Promise<any> => this.socket.invoke('Zone.SetFlagMarker', [mapId, territoryId, x, y]),
        removeFlagMarker: (): Promise<any> => this.socket.invoke('Zone.RemoveFlagMarker', []),
    } as const;
}
